<?php
require_once(DRUPAL_ROOT.'/sites/all/modules/appointment/config.inc');

function appointment_course_block_info(){
	$blocks['add_schedule'] = array(
		'info' => t('Add Schedule'),
    'status' => TRUE,
    'region' => 'sidebar_second',
    'weight' => 0,
    'visibility' => 0,
  );
	$blocks['delete_schedule'] = array(
		'info' => t('Delete Schedule'),
    'status' => TRUE,
    'region' => 'sidebar_second',
    'weight' => 0,
    'visibility' => 0,
  );
  return $blocks;
}

function appointment_course_block_view($delta){
	switch($delta){
		case 'add_schedule':
  		$block['subject'] = t('Add Schedule');
  		$block['content'] = appointment_course_block_contents($delta);
			break;
		case 'delete_schedule':
  		$block['subject'] = t('Delete Schedule');
  		$block['content'] = appointment_course_block_contents($delta);
			break;
  }
	return $block;
}

function appointment_course_block_contents($delta){
	switch($delta){
		case 'add_schedule':
			$output = drupal_render(drupal_get_form('add_schedule_form'));
			break;
		case 'delete_schedule':
			$output = drupal_render(drupal_get_form('delete_schedule_form'));
			break;
	}
	return $output;
}


function appointment_course_menu(){
	$items['appointment_course']=array(
			'title' => 'Course Manager',
			'page callback' => 'appointment_course_page',
			'access callback' => 'user_access',
			'access arguments' => array('manage course'),	
			'type' => MENU_NORMAL_ITEM,
	);
	$items['appointment_course/delete']=array(
			'title' => 'Appointment Course',
			'page callback' => 'delete_course',
			'access callback' => 'user_access',
			'access arguments' => array('manage course'),	
			'type' => MENU_CALLBACK,
	);
	$items['appointment_course/edit']=array(
			'title' => 'Appointment Course',
			'page callback' => 'edit_course',
			'access callback' => 'user_access',
			'access arguments' => array('manage course'),	
			'type' => MENU_CALLBACK,
	);
	$items['course_schedule']=array(
			'title' => 'Edit Course Schedule',
			'page callback' => 'list_classroom',
			'access callback' => 'user_access',
			'access arguments' => array('manage course'),	
			'type' => MENU_NORMAL_ITEM,
	);
	$sql = 'SELECT * FROM classroom';
	$result = db_query($sql);
	foreach($result as $row){
		$items['course_schedule/'.$row->serial]=array(
			'title' => $row->serial,
			'page callback' => 'course_schedule',
			'page arguments' => array($row->cid),
			'access callback' => 'user_access',
			'access arguments' => array('manage course'),	
			'type' => MENU_NORMAL_ITEM,
		);
	}
	return $items;
}

function appointment_course_permission(){
	return array(
		'manage course' => array(
			'title' => t('Manager course'),
			'description' => t('Allow users manager the list of course.'),
		),
	);
}

function delete_course($crid){
	$success = db_delete('course')
		->condition('crid',$crid)
		->execute();
	if($success!=null)
		drupal_set_message('Delete Course '.$crid.' Success');
	else
		drupal_set_message('Delete Course '.$crid.' Failed','error');	
	
	drupal_goto('appointment_course');
	return;
}

function edit_course($arg){
	switch($arg){
		case 'teacher':
			$success = db_update('course')
				->fields(array(
					'teacher' => $_POST['new_teacher']
			))
			->condition('crid',$_POST['crid'],'=')
			->execute();
			if($success != null)
				drupal_set_message('Update Teacher Success');
			else
				drupal_set_message('Update Teacher Failed','error');
			drupal_goto('appointment_course');
			break;
		case 'name':
			$success = db_update('course')
				->fields(array(
					'name' => $_POST['new_name']
			))
			->condition('crid',$_POST['crid'],'=')
			->execute();
			if($success != null)
				drupal_set_message('Update Name Success');
			else
				drupal_set_message('Update Name Failed','error');
			drupal_goto('appointment_course');
			break;

	return;
	}
	
}

function appointment_course_page(){
	$result = db_query('SELECT * FROM course ORDER BY name');
	$rows = array();
	foreach($result as $row){
		$rename = '
			<center>
				<form name="edit_name" action="appointment_course/edit/name" method="post">
					New name:
      		<input name="new_name" type="text" />
        	<input name="crid" type="hidden" value="'.$row->crid.'" />
        	<input type="submit" value="submit" />
				</form>
				<form name="edit_teacher" action="appointment_course/edit/teacher" method="post">
					New teacher:
      		<input name="new_teacher" type="text" />
        	<input name="crid" type="hidden" value="'.$row->crid.'" />
        	<input type="submit" value="submit" />
				</form>
			</center>';
		$delete = 
			'<a href="appointment_course/delete/'.$row->crid.'"><img src="sites/all/modules/appointment/images/b_drop.png" /></a>';
		$rows[] = array($row->name, $row->teacher,$rename,$delete);
	}
	$headers = array('Name', 'Teacher','Rename','Delete');
	
	$output = theme(
		'table',
		array(
			'header' => $headers,
			'rows' => $rows
		)
	);
	$output .= '<h1>add course</h1>'; 
	$output .= drupal_render(drupal_get_form('appointment_course_form'));
	return $output;
}

function list_classroom(){
	$sql = 'SELECT * FROM classroom';
	$result = db_query($sql);
	$rows = array();
	global $base_path;
	foreach($result as $row){
		$rows[] = '<a href="'.$base_path.'course_schedule/'.$row->serial.'">'.$row->serial.'</a>';
	}
	
	return theme('item_list',array('items'=>$rows));
}

function course_schedule($cid){
	$weekdays = get_weekday();
	$header = array(
		'',
		$weekdays[0],
		$weekdays[1],
		$weekdays[2],
		$weekdays[3],
		$weekdays[4],
		$weekdays[5],
		$weekdays[6],
	);
	$rows = array();	
	$period_joint = get_period_joint();
	$period_time = get_period_time();
	for($i=0;$i<14;$i++){
		$rows[$i]=array(8);
		for($j=1;$j<8;$j++)
			$rows[$i][$j]=array('width'=>'12%');
		$rows[$i][0]	= $period_joint[$i].' '.$period_time[$i];
		$cid_condition = 'cid='.$cid;
		$sql = 'SELECT * FROM course_schedule WHERE '.$cid_condition;
		$result = db_query($sql);
		foreach($result as $row){
			$sql = 'SELECT * FROM course WHERE crid='.$row->crid;
			$course = db_query($sql)->fetchObject();
			$coursename = $course->name.'<br />'.$course->teacher;
			if($i>=$row->start_period && $i<=$row->end_period){
				$rows[$i][$row->weekday+1]=array('data'=>$coursename,'width'=>'12%','style'=>'color:purple');
			}
		}		
	}
	$output = theme('table',array(
		'header'=>$header,
		'rows'=>$rows
		)
	);
	return $output;
}

function appointment_course_form($form, &$form_state){
	$form = array();
 	$form['name'] = array(
     '#type'=>'textfield',
     '#title'=>t('Name'),
  );
  $form['teacher'] = array(
    '#type'=>'textfield',
  	'#title'=>t('Teacher'),
  );
  $form['submit'] = array('#type'=>'submit', '#value'=>'Submit');
	return $form;
}

function appointment_course_form_submit($form, &$form_state) {
	db_insert('course')
		->fields(array(
			'crid' => NULL,
			'name' => $form_state['values']['name'],
			'teacher' => $form_state['values']['teacher']
		))
		->execute();
}

function add_schedule_form($form, &$form_state){
	$serial = substr($_SERVER['QUERY_STRING'],18,4);
	$cid = get_classroom_info($serial)->cid;
	$form = array();
	$sql = 'SELECT * FROM course ORDER BY name';
	$result = db_query($sql);
	$courselist = array();
	foreach($result as $row)
		$courselist[$row->crid] = $row->name.' '.$row->teacher;
 	$form['name'] = array(
     	'#type'=>'select',
     	'#title'=>t('Course'),
			'#options'=>$courselist
  );
	$form['cid'] = array(
		'#type'=>'hidden',
		'#value'=>$cid,
	);
  $form['weekday'] = array(
    '#type'=>'select',
  	'#title'=>t('Weekday'),
		'#options'=>get_weekday(),
		'#default_value' => 1 
  );
	$form['start_period'] = array(
		'#type'=>'select',
		'#title'=>t('Start Period'),
		'#options'=>get_period(),
		'#default_value' => 0
	);
	$form['end_period'] = array(
		'#type'=>'select',
		'#title'=>t('End Period'),
		'#options'=>get_period(),
		'#default_value' => 0
	);
  $form['submit'] = array('#type'=>'submit', '#value'=>'Add');
	return $form;
}

function add_schedule_form_submit($form, &$form_state){
	db_insert('course_schedule')
		->fields(array(
			'cid' => $form_state['values']['cid'],
			'crid' => $form_state['values']['name'],
			'weekday' => $form_state['values']['weekday'],
			'start_period' => $form_state['values']['start_period'],
			'end_period' => $form_state['values']['end_period'],
		))
		->execute();
}

function delete_schedule_form($form, &$form_state){
	$weekdays = get_weekday();
	$period_joint = get_period_joint();
	$period_time = get_period_time();
	$serial = substr($_SERVER['QUERY_STRING'],18,4);
	$cid = get_classroom_info($serial)->cid;
	$sql = 'SELECT * FROM course_schedule WHERE cid='.$cid.' ORDER BY weekday';	
	$result = db_query($sql);
	$courselist = array();
	foreach($result as $row){
		$sql = 'SELECT name,teacher FROM course WHERE crid='.$row->crid;
		$course = db_query($sql)->fetchObject();
		$courselist[$row->id] = 
			$course->name.' '.$course->teacher.' '.
			$weekdays[$row->weekday].' '.
			$period_joint[$row->start_period].'~'.$period_joint[$row->end_period];
	}
	$form = array();
	$form['course_schedule'] = array(
     	'#type'=>'select',
     	'#title'=>t('Course'),
			'#options'=>$courselist
	);
  $form['submit'] = array('#type'=>'submit', '#value'=>'Delete');
	return $form;
}

function delete_schedule_form_submit($form, &$form_state){
	db_delete('course_schedule')
		->condition('id',$form_state['values']['course_schedule'])
		->execute();
}
